name: Ubuntu Kernel latest BBRPLUS

on:
  workflow_dispatch:
  #schedule:
    #- cron: "39 20 * * 1,6"
    #inputs:
     # ssh:
      #  description: 'SSH connection to Actions'
       # required: false
        #default: 'false'

env:
  UPLOAD_DIR: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      id: initialization
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E sed -i~orig -e 's/# deb-src/deb-src/' /etc/apt/sources.list   
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential bzip2 gawk gettext git patch unzip htop wget curl -y
        sudo -E apt-get -qq build-dep linux -y
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo mkdir -p /workdir/upload
        sudo chown $USER:$GROUPS /workdir
        sudo chown $USER:$GROUPS /workdir/upload
        echo "::set-output name=status::success"

    - name: Get source code
      working-directory: /workdir
      id: code
      if: steps.initialization.outputs.status == 'success'
      run: |
        df -hT $PWD
        kernel_file=$(curl -s https://www.kernel.org/ | grep 'alt="Download"' | awk -F '"' '{print $2}')
        kernel_ver=$(curl -s https://www.kernel.org/ | grep ' <a href="https://cdn.kernel.org/pub/linux/kernel/' | head -n 1 | awk -F '[>]' '{print $2}' | awk -F '[<]' '{print $1}')
        wget -O kernel.tar.xz $kernel_file
        tar -Jxvf kernel.tar.xz -C /workdir && cd /workdir/linux-$kernel_ver
        echo "::set-output name=status::success"

    - name: Compile the kernel
      id: compile
      if: steps.code.outputs.status == 'success'
      working-directory: /workdir
      run: |
        kernel_ver=$(curl -s https://www.kernel.org/ | grep ' <a href="https://cdn.kernel.org/pub/linux/kernel/' | head -n 1 | awk -F '[>]' '{print $2}' | awk -F '[<]' '{print $1}')
        cd linux-$kernel_ver
        wget -O kernel.patch https://raw.githubusercontent.com/masachi/ubuntu-kernel-update/main/kernel.patch
        cp kernel.patch /workdir/linux-${kernel_ver}/kernel.patch
        patch -p0 < kernel.patch
        wget -O .config https://raw.githubusercontent.com/masachi/ubuntu-kernel-update/main/config-5.10.27-bbrplus
        # cp .config /workdir/linux-${kernel_ver}/.config
        # copy bbr_plus to net ipv4
        wget -O tcp_bbrplus.c https://raw.githubusercontent.com/marywangran/tcp-fair-bbr/main/tcp_fairbbr.c
        cp tcp_bbrplus.c /workdir/linux-${kernel_ver}/net/ipv4/tcp_bbrplus.c
        sed -ri '/CONFIG_SYSTEM_TRUSTED_KEYS/s/=.+/=""/g' .config && scripts/config --disable MODULE_SIG && scripts/config --disable DEBUG_INFO
        echo -e "$(nproc) thread compile"
        sudo time make -j$(nproc) deb-pkg
        cd /workdir && mv *.deb /workdir/upload
        echo "::set-output name=status::success"
        echo "FILE_DATE=Kernel_Ubuntu_$kernel_ver_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV   

    - name: Check space usage
      if: (!cancelled()) && steps.compile.outputs.status == 'success'
      run: df -hT

    - name: Upload
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_DIR == 'true'
      with:
        name: ${{ env.FILE_DATE }}
        path: /workdir/upload

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        kernel_ver=$(curl -s https://www.kernel.org/ | grep ' <a href="https://cdn.kernel.org/pub/linux/kernel/' | head -n 1 | awk -F '[>]' '{print $2}' | awk -F '[<]' '{print $1}')
        echo "::set-output name=release_tag::Ubuntu_Kernel_${kernel_ver}_latest_bbrplus_$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        echo "only for Cloud VMs" >> release.txt
        echo "::set-output name=status::success"

    - name: Upload kernel to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: /workdir/upload/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 10
